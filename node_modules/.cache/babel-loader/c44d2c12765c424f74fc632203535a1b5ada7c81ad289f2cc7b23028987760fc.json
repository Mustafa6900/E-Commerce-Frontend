{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fener\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\React Projeler\\\\ZaraDemo\\\\node-react-ecommerce-master\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CartScreen() {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [quantity, setQuantity] = useState('');\n  useEffect(() => {\n    async function fetchcartData() {\n      const userInfo = JSON.parse(Cookie.get('userInfo'));\n      console.log(userInfo[0][0].id, \"  user id\");\n      const response = await fetch(\"http://localhost:3000/cart\", {\n        method: 'POST',\n        body: JSON.stringify({\n          user_id: userInfo[0][0].id\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      setCart(data[0]);\n    }\n    fetchcartData();\n  }, []);\n  function deleteCartItem(id) {\n    async function fetchdeletecartData() {\n      const userInfo = JSON.parse(Cookie.get('userInfo'));\n      try {\n        const response = await fetch('http://localhost:3000/cart/deleteCart', {\n          method: 'DELETE',\n          body: JSON.stringify({\n            product_id: id,\n            user_id: userInfo[0][0].id\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          // İstek başarılı olduğunda bir başarı mesajı gösterin\n          alert('Ürün başarıyla silindi!');\n        } else {\n          // İstek başarısız olduğunda bir hata mesajı gösterin\n          alert('Ürün silinirken hata oluştu!');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchdeletecartData();\n    setCart([]);\n    window.location.reload();\n  }\n  function updateCartItem(id, quantity) {\n    async function fetchupdatecartData() {\n      const userInfo = JSON.parse(Cookie.get('userInfo'));\n      try {\n        const response = await fetch('http://localhost:3000/cart/updateCart', {\n          method: 'PUT',\n          body: JSON.stringify({\n            product_id: id,\n            user_id: userInfo[0][0].id,\n            quantity: quantity\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          // İstek başarılı olduğunda bir başarı mesajı gösterin\n          alert('Ürün başarıyla güncellendi!');\n        } else {\n          // İstek başarısız olduğunda bir hata mesajı gösterin\n          alert('Ürün güncellenirken hata oluştu!');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchupdatecartData();\n    setQuantity([]);\n    window.location.reload();\n  }\n  var totalPrice = 0;\n  cart.forEach(item => {\n    totalPrice += item.quantity * item.price;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sepet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cart.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.user_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.quantity * item.price, \" TL\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteCartItem(item.product_id),\n              children: \"Sil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"quantity\",\n              onChange: e => setQuantity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateCartItem(item.product_id, quantity),\n              children: \"G\\xFCncelle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 3\n          }, this)]\n        }, item.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Satin Al\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 1\n    }, this), a]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 1\n  }, this);\n}\n_s(CartScreen, \"1p1O6pebigCDUO7CEPuJx19YNj4=\");\n_c = CartScreen;\nexport default CartScreen;\nvar _c;\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"names":["React","useState","useEffect","Cookie","CartScreen","cart","setCart","quantity","setQuantity","fetchcartData","userInfo","JSON","parse","get","console","log","id","response","fetch","method","body","stringify","user_id","headers","data","json","deleteCartItem","fetchdeletecartData","product_id","ok","alert","error","window","location","reload","updateCartItem","fetchupdatecartData","totalPrice","forEach","item","price","map","e","target","value","a"],"sources":["C:/Users/fener/OneDrive/Masaüstü/React Projeler/ZaraDemo/node-react-ecommerce-master/frontend/src/screens/CartScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Cookie from 'js-cookie';\nfunction CartScreen() {\n\nconst [cart, setCart] = useState([]);\nconst [quantity, setQuantity] = useState('');\n\nuseEffect(() => {\n\n  async function fetchcartData() {\n    const userInfo = JSON.parse(Cookie.get('userInfo'));\n    console.log(userInfo[0][0].id, \"  user id\");\n    const response = await fetch(\"http://localhost:3000/cart\", {\n      method: 'POST',\n      body: JSON.stringify({ \n        user_id: userInfo[0][0].id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    setCart(data[0]);\n  }\n  fetchcartData();\n}, []);\n\nfunction deleteCartItem(id){\n  async function fetchdeletecartData() {\n    const userInfo = JSON.parse(Cookie.get('userInfo'));\n    try {\n      const response = await fetch('http://localhost:3000/cart/deleteCart', {\n        method: 'DELETE',\n        body: JSON.stringify({\n          product_id: id,\n          user_id: userInfo[0][0].id,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n          // İstek başarılı olduğunda bir başarı mesajı gösterin\n          alert('Ürün başarıyla silindi!');\n        } else {\n          // İstek başarısız olduğunda bir hata mesajı gösterin\n          alert('Ürün silinirken hata oluştu!');\n        }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  fetchdeletecartData();\n  setCart([]);\n  window.location.reload();\n\n}\n\nfunction updateCartItem(id,quantity){\n  async function fetchupdatecartData() {\n    const userInfo = JSON.parse(Cookie.get('userInfo'));\n    try {\n      const response = await fetch('http://localhost:3000/cart/updateCart', {\n        method: 'PUT',\n        body: JSON.stringify({\n          product_id: id,\n          user_id: userInfo[0][0].id,\n          quantity: quantity\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n          // İstek başarılı olduğunda bir başarı mesajı gösterin\n          alert('Ürün başarıyla güncellendi!');\n        } else {\n          // İstek başarısız olduğunda bir hata mesajı gösterin\n          alert('Ürün güncellenirken hata oluştu!');\n        }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  fetchupdatecartData();\n  setQuantity([]);\n  window.location.reload();\n\n}\n\nvar totalPrice=0;\n\ncart.forEach(item => {\n  totalPrice += item.quantity * item.price;\n});\nreturn (\n<div>\n<h1>Sepet</h1>\n<table>\n<thead>\n<tr>\n<th>User_id</th>\n<th>Product_id</th>\n<th>Quantity</th>\n<th>Price</th>\n</tr>\n</thead>\n<tbody>\n{cart.map(item => (\n\n<tr key={item.user_id}>\n<td >{item.user_id}</td>\n<td>{item.product_id}</td>\n<td>{item.quantity}</td>\n<td>{item.quantity*item.price} TL</td>\n<td></td>\n<td></td>\n{\n  <li>\n  <button onClick={() => deleteCartItem(item.product_id)}>Sil</button>\n  \n  </li>\n  \n}\n{\n  <li>\n    <input type=\"text\" name=\"quantity\" onChange={(e) => setQuantity(e.target.value)} />\n      \n    <button onClick={() => updateCartItem(item.product_id,quantity)}>\n      Güncelle\n      </button>\n   </li>\n}\n</tr>\n))}\n</tbody>\n</table>\n\n<h3>Satin Al</h3>\n{a}\n</div>\n\n);\n}\n\nexport default CartScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}