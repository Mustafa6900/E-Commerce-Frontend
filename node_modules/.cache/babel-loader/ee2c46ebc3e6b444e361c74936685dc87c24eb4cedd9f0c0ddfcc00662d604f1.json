{"ast":null,"code":"import Axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from \"../constants/orderConstants\";\nconst createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data: {\n        data: newOrder\n      }\n    } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: userInfo[0][0].id\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: newOrder\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};\nconst listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const response = await fetch(\"http://localhost:3000/myorder\", {\n      method: 'GET',\n      body: JSON.stringify({\n        user_id: userInfo[0][0].id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data[0], \" -- data\");\n    dispatch({\n      type: MY_ORDER_LIST_SUCCESS,\n      payload: data[0]\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nconst listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders\", {\n      headers: {\n        Authorization: userInfo[0][0].id\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nconst detailsOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"http://localhost:3000/order/details\", {\n      body: {\n        order_id: orderId\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n      payload: paymentResult\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\n      headers: {\n        Authorization: userInfo[0][0].id\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.message\n    });\n  }\n};\nconst deleteOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.delete(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: userInfo[0][0].id.id\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders, deleteOrder };","map":{"version":3,"names":["Axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","MY_ORDER_LIST_REQUEST","MY_ORDER_LIST_SUCCESS","MY_ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","newOrder","post","headers","Authorization","id","error","message","listMyOrders","response","fetch","method","body","JSON","stringify","user_id","json","console","log","listOrders","get","detailsOrder","orderId","order_id","payOrder","paymentResult","put","_id","deleteOrder","delete"],"sources":["C:/Users/fener/OneDrive/Masaüstü/React Projeler/ZaraDemo/node-react-ecommerce-master/frontend/src/actions/orderActions.js"],"sourcesContent":["import Axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL\n} from \"../constants/orderConstants\";\n\nconst createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n    const { userSignin: { userInfo } } = getState();\n    const { data: { data: newOrder } } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization:  userInfo[0][0].id\n      }\n    });\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: newOrder });\n  } catch (error) {\n    dispatch({ type: ORDER_CREATE_FAIL, payload: error.message });\n  }\n}\n\nconst listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_ORDER_LIST_REQUEST });\n    const { userSignin: { userInfo } } = getState();\n    const response = await fetch(\"http://localhost:3000/myorder\", {\n      method: 'GET',\n      body: JSON.stringify({ \n        user_id: userInfo[0][0].id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data[0] , \" -- data\")\n    dispatch({ type: MY_ORDER_LIST_SUCCESS, payload: data[0] })\n  } catch (error) {\n    dispatch({ type: MY_ORDER_LIST_FAIL, payload: error.message });\n  }\n}\n\nconst listOrders = () => async (dispatch, getState) => {\n\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST });\n    const { userSignin: { userInfo } } = getState();\n    const { data } = await Axios.get(\"/api/orders\", {\n      headers:\n        { Authorization:   userInfo[0][0].id }\n    });\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({ type: ORDER_LIST_FAIL, payload: error.message });\n  }\n}\n\nconst detailsOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n    const { userSignin: { userInfo } } = getState();\n    const { data } = await Axios.get(\"http://localhost:3000/order/details\" , {\n\n    body: {\n      order_id: orderId\n    },\n    headers: {\n      'Content-Type': 'application/json'\n    }\n    });\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\n  }\n}\n\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_PAY_REQUEST, payload: paymentResult });\n    const { userSignin: { userInfo } } = getState();\n    const { data } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\n      headers:\n        { Authorization:   userInfo[0][0].id }\n    });\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({ type: ORDER_PAY_FAIL, payload: error.message });\n  }\n}\n\nconst deleteOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n    const { userSignin: { userInfo } } = getState();\n    const { data } = await Axios.delete(\"/api/orders/\" + orderId, {\n      headers:\n        { Authorization:   userInfo[0][0].id.id }\n    });\n    dispatch({ type: ORDER_DELETE_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({ type: ORDER_DELETE_FAIL, payload: error.message });\n  }\n}\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders, deleteOrder };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}